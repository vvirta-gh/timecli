name: CI for TimeCLI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  docker_build_and_test: # Renamed job for clarity
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build and Test Docker image (test stage)
        run: |
          # This command builds up to your 'test' stage in the Dockerfile.
          # If 'task test' or 'task lint' (which run pytest and flake8)
          # fail within that stage, this docker build command will fail,
          # causing the CI job to fail.
          docker build --target test -t timecli-test-env .

      - name: Build Production Docker image
        if: success() # Only build the production image if the test stage build succeeded
        run: |
          # This builds the final 'production' stage image.
          # If 'production' is the last stage in your Dockerfile,
          # you can also use: docker build -t timecli:latest .
          docker build --target production -t timecli:latest .